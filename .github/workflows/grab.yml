name: Grab

on:
  # Run every 5 minutes
  # 12.10 UTC Time, 06.10 Central Time
  # Changed to every 5 minutes, due to including Youtube links and Pluto, so those links are always correct and the playlist is always upto date.
  schedule:
    - cron: "5 0 * * *"

jobs:

  Running_M3U8_Creator:
    name: Running M3U8 Creator
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - name: Last Attempts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo $(date) >> last_attempt.txt
          cat last_attempt.txt
          ls -ltr
          git status
          git add last_attempt.txt
          git status
          git commit -m "cron: setting last attempt time stamp" -a
          git status
          
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Check *.M3u File existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./provider/ny.m3u, ./provider/pi.m3u, ./provider/dfw.m3u, ./provider/la.m3u, ./provider/ca.m3u"

      - uses: actions/checkout@v2
      - name: If *.M3U Files exists - Then Cleanup
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git rm ./temp/*.m3u
          git rm ./temp/locals/*.m3u
          git rm ./temp/m3u/*.m3u
          git rm ./provider/*.m3u
          git status
          git push          
          git commit -m "cron: Updated by Bot" -a
         
        
      ### SETUP THE ENVIRONMENT
      - name: Setup Environment
        # e.g. create work dirst, store in env variables ... https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions
        run: |
          echo "M3U8_DIR=./provider/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR=./temp/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR2=./temp/m3u/" >> $GITHUB_ENV
          echo "M3U8_LOCAL_DIR=./temp/locals/" >> $GITHUB_ENV
      - name: Setup Dirs
        run: |
          echo "M3U8_STATIC_DIR: '${M3U8_STATIC_DIR}'"
          echo "Command: 'mkdir -p ${M3U8_DIR}'"
          mkdir -p ${M3U8_DIR}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR}'"
          mkdir -p ${M3U8_STATIC_DIR}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR2}'"
          mkdir -p ${M3U8_STATIC_DIR2}
          echo "Command: 'mkdir -p ${M3U8_LOCAL_DIR}'"
          mkdir -p ${M3U8_LOCAL_DIR}
          echo "Command: 'ls -alt ${M3U8_DIR}'"
          ls -alt ${M3U8_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR}'"
          ls -alt ${M3U8_STATIC_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR2}'"
          ls -alt ${M3U8_STATIC_DIR2}
          echo "Command: 'ls -alt ${M3U8_LOCAL_DIR}'"
          ls -alt ${M3U8_LOCAL_DIR}

      - name: Get other m3u8s to add
        run: |

          wget -O ${M3U8_LOCAL_DIR}local_ny.m3u https://raw.githubusercontent.com/Arkina1234/IPTV/main/locals/local_ny.m3u

          wget -O ${M3U8_LOCAL_DIR}local_pi.m3u https://raw.githubusercontent.com/Arkina1234/IPTV/main/locals/local_pi.m3u

          wget -O ${M3U8_LOCAL_DIR}local_dfw.m3u https://raw.githubusercontent.com/Arkina1234/IPTV/main/locals/local_dfw.m3u

          wget -O ${M3U8_LOCAL_DIR}local_la.m3u https://raw.githubusercontent.com/Arkina1234/IPTV/main/locals/local_la.m3u

          wget -O ${M3U8_LOCAL_DIR}local_ca.m3u https://raw.githubusercontent.com/Arkina1234/IPTV/main/locals/local_ca.m3u

          wget -O ${M3U8_STATIC_DIR}cable.m3u http://m3u4u.com/m3u/p192y71zq4uk2jeymeg3.m3u
 
      - name: Merge Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          cat ./temp/locals/local_ny.m3u > ./temp/m3u/ny.m3u
          cat ./temp/locals/local_pi.m3u > ./temp/m3u/pi.m3u
          cat ./temp/locals/local_dfw.m3u > ./temp/m3u/dfw.m3u
          cat ./temp/locals/local_la.m3u > ./temp/m3u/la.m3u
          cat ./temp/locals/local_ca.m3u > ./temp/m3u/ca.m3u       
          
    
      ### PROCESS THE DATA ###
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date '+%Y-%m-%d')"


      - name: Merge All The Files Into Provider files.
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          cat ./temp/m3u/ny.m3u ./temp/cable.m3u > ./provider/ny.m3u
          cat ./temp/m3u/pi.m3u ./temp/cable.m3u > ./provider/pi.m3u
          cat ./temp/m3u/dfw.m3u ./temp/cable.m3u > ./provider/dfw.m3u
          cat ./temp/m3u/la.m3u ./temp/cable.m3u > ./provider/la.m3u
          cat ./temp/m3u/ca.m3u ./temp/cable.m3u > ./provider/ca.m3u
          cat ./temp/m3u/ny.m3u ./temp/cable.m3u > ./provider/ny.m3u8
          cat ./temp/m3u/pi.m3u ./temp/cable.m3u > ./provider/pi.m3u8
          cat ./temp/m3u/dfw.m3u ./temp/cable.m3u > ./provider/dfw.m3u8
          cat ./temp/m3u/la.m3u ./temp/cable.m3u > ./provider/la.m3u8
          cat ./temp/m3u/ca.m3u ./temp/cable.m3u > ./provider/ca.m3u8
          
      
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        if: ${{ !env.ACT && github.ref == 'refs/heads/master' }}
        with:
          branch: gh-pages
          folder: .gh-pages
          token: ${{ steps.create-app-token.outputs.token }}
          git-config-name: GitHub Action
          git-config-email: action@github.com
          commit-message: 'Deploy to GitHub Pages'
          clean: false

      - name: Create Workflow Artifact #this is created, so if theres an error, you can look back at previous yml
        uses: actions/upload-artifact@v2
        with:
         name: workflow_${{ steps.date.outputs.date }}
         path: .github/workflows/grab.yml
          
      - name: Commit All Files
        uses: zwaldowski/git-commit-action@v1
        with:
             commit_message: Updated by Bot - ${{ steps.date.outputs.date }}
             working_directory: .
                - uses: repo-sync/pull-request@v2
        if: ${{ !env.ACT && github.ref == 'refs/heads/master' }}
        id: pull-request
        with:
          github_token: ${{ steps.create-app-token.outputs.token }}
          source_branch: ${{ steps.create-branch-name.outputs.branch_name }}
          destination_branch: 'main'
